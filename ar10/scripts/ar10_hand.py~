#!/usr/bin/env python

"""
Active8 Robots, AR10 hand demonstration.
"""

from ar10_class import ar10
import time
import sys
import os
import random
import serial
import subprocess

import rospy
from std_msgs.msg import String 
from std_msgs.msg import Int32


def listener():


    rospy.init_node('listener', anonymous=True) # defines anonymous listener node

    rospy.Subscriber('commands', String, main) # Subscribes to publisher node 'commands'
    rospy.Subscriber('servo_positions',Int32,callback) # Subscribes to publisher node 'servo_positions'

    rospy.spin()  # spin() simply keeps python from exiting until this node is stopped

def callback(data): # callback that is executed when a message from servo_positions is recieved 
    rospy.loginfo(data.data)

def main(data): # main that is called when a message from commands is recieved
    # create hand object
    hand = ar10() 

    hand.open_hand() # opens the hand
    # entering the loop
    x=1
    while x==1:


        rospy.loginfo(rospy.get_caller_id() + 'I heard %s', data.data) # logs messages recieved from commands to /rosout
        option = data.data

        if option == "S":
            while True:
                try:
                    speed = int(raw_input("Enter Speed (0 - 60) >> "))
                    if speed <= 60 and speed >= 0:
                        break
                    else:
                        print "Invalid Speed"
                except ValueError:
                    print "Invalid Speed"
                hand.set_speed(speed)
        elif option == "A":
            while True:
                try:
                    acceleration = int(raw_input("Enter Acceleration (0 - 60) >> "))
                    if acceleration <= 255 and acceleration >= 0:
                        break
                    else:
                        print "Invalid Acceleration"
                except ValueError:
                    print "Invalid Acceleration"
                hand.set_acceleration(acceleration)
        elif option == "O":        # open the hand
            hand.open_hand()
	    x+=1
        elif option == "C":
            hand.close_hand()
	    x+=1

        elif option == "F":
            print "T = thumb"
            print "1 = first finger"
            print "2 = second finger"
            print "3 = third finger"
            print "4 = forth finger"
            while True:
                finger = raw_input("Enter Finger >> ").upper()
                if finger == "T":    # flex fingers
                    hand.open_hand()
                    hand.flex_finger(0)
                    break
                elif finger == "1":
                    hand.open_hand()
                    hand.flex_finger(4)
                    break
                elif finger == "2":
                    hand.open_hand()
                    hand.flex_finger(3)
                    break
                elif finger == "3":
                    hand.open_hand()
                    hand.flex_finger(2)
                    break
                elif finger == "4":
                    hand.open_hand()
                    hand.flex_finger(1)
                    break
                else:
                    print "Invalid Finger"
        elif option == "M":
            # find valid joint
            while True:
                try:
                    joint = int(raw_input("Enter Joint (0 - 9) >> "))
                    if joint <= 9 and joint >= 0:
                        break
                    else:
                        print "Invalid Joint"
                except ValueError:
                    print "Invalid Joint"

            # find valid position
            while True:
                try:
                    target = int(raw_input("Enter Position (256 - 3850) >> "))
                    if target <= 3850 and target >= 256:
                        break
                    else:
                        print "Invalid Position"
                except ValueError:
                    print "Invalid Position"

            # move joint to target position
            hand.move(joint, target)
            hand.wait_for_hand()
        elif option == "H":
            hand.hold_tennis_ball()
	    x+=1
        elif option == "G":
            hand.hold_golf_ball()
	    x+=1
        elif option == "D":
            hand.demo()
	    x+=1
	elif option =="Z":
	    hand.move(9,1000)
	    x+=1
        elif option == "E":
            break
        else:
            print "Invalid Option"
            time.sleep(2)
	    x+=1

    time.sleep(1)
    hand.close()

if __name__ == "__main__":
        listener()

